// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id               String      @id @default(cuid())
  username         String
  creatorId        String
  creator          Creator     @relation(fields: [creatorId], references: [id])
  password         String
  name             String
  purchasedCourses Course[]    @relation
  purchases        Purchases[]

  @@unique([username, creatorId])
}

model Creator {
  id             String    @id @default(cuid())
  username       String    @unique
  password       String
  name           String    @unique
  students       Student[]
  createdCourses Course[]
}

model Course {
  id          String      @id @unique @default(cuid())
  title       String
  description String
  price       Int
  discount    Int
  imageUrl    String
  creatorId   String
  creator     Creator     @relation(fields: [creatorId], references: [id])
  students    Student[]   @relation
  purchased   Purchases[]
  modules     Module[]    @relation("CourseToModule")

  @@unique([title, creatorId])
}

model Module {
  id       String   @id @default(cuid())
  title    String
  order    Int
  Course   Course   @relation("CourseToModule", fields: [courseId], references: [id], onDelete: Cascade)
  courseId String
  lessons  Lesson[] @relation("ModuleToLesson")
}

model Lesson {
  id       String @id @default(cuid())
  title    String
  order    Int
  url      String
  module   Module @relation("ModuleToLesson", fields: [moduleId], references: [id], onDelete: Cascade)
  moduleId String
}

model Purchases {
  id              String         @id @unique @default(cuid())
  amount          Int
  buyerId         String
  razorpayOrderId String
  buyer           Student        @relation(fields: [buyerId], references: [id])
  courseId        String
  course          Course         @relation(fields: [courseId], references: [id])
  status          PurchaseStatus @default(PENDING)
  purchaseDate    DateTime       @default(now())
}

enum PurchaseStatus {
  PENDING
  COMPLETED
}
